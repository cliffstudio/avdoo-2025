!function(){"use strict";class t{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.$form=t.$form,this.form=this.$form.form,this.$field=t.$field,this.$locationBtn=this.$field.querySelector("[data-fui-address-location-btn]"),this.loadingClass=this.form.getClasses("loading"),this.initLocationBtn()}initLocationBtn(){this.$locationBtn&&this.form.addEventListener(this.$locationBtn,function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return e||(e=Math.random().toString(36).substr(2,5)),`${t}.${e}`}("click"),(t=>{t.preventDefault(),this.onStartFetchLocation(),navigator.geolocation?navigator.geolocation.getCurrentPosition((t=>{this.onCurrentLocation(t)}),(t=>{console.log(`Unable to fetch location ${t.code}.`),this.onEndFetchLocation()}),{enableHighAccuracy:!0}):(console.log("Browser does not support geolocation."),this.onEndFetchLocation())}))}onCurrentLocation(t){this.onEndFetchLocation()}onStartFetchLocation(){var t,e;t=this.$locationBtn,e=this.loadingClass,t&&e&&("string"==typeof e&&(e=e.split(" ")),e.forEach((e=>{t.classList.add(e)}))),this.$locationBtn.setAttribute("aria-disabled",!0)}onEndFetchLocation(){var t,e;t=this.$locationBtn,e=this.loadingClass,t&&e&&("string"==typeof e&&(e=e.split(" ")),e.forEach((e=>{t.classList.remove(e)}))),this.$locationBtn.setAttribute("aria-disabled",!1)}}function e(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,s)}return o}function o(t,e,o){return e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var s=o.call(t,e||"default");if("object"!=typeof s)return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:String(e)}(e),e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}window.FormieAddressProvider=t;window.FormieGoogleAddress=class extends t{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(t),this.$form=t.$form,this.form=this.$form.form,this.$field=t.$field,this.$input=this.$field.querySelector("[data-autocomplete]"),this.scriptId="FORMIE_GOOGLE_ADDRESS_SCRIPT",this.appId=t.appId,this.apiKey=t.apiKey,this.geocodingApiKey=t.geocodingApiKey||t.apiKey,this.options=t.options,this.retryTimes=0,this.maxRetryTimes=150,this.waitTimeout=200,this.$input?this.initScript():console.error("Unable to find input `[data-autocomplete]`.")}initScript(){if(document.getElementById(this.scriptId))this.waitForLoad();else{const t=document.createElement("script");t.src=`https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=places`,t.defer=!0,t.async=!0,t.id=this.scriptId,t.onload=()=>{this.waitForLoad()},document.body.appendChild(t)}}waitForLoad(){this.retryTimes>this.maxRetryTimes?console.error(`Unable to load Google API after ${this.retryTimes} times.`):"undefined"==typeof google||void 0===google.maps||void 0===google.maps.places?(this.retryTimes+=1,setTimeout(this.waitForLoad.bind(this),this.waitTimeout)):this.initAutocomplete()}initAutocomplete(){const t=function(t){for(var s=1;s<arguments.length;s++){var i=null!=arguments[s]?arguments[s]:{};s%2?e(Object(i),!0).forEach((function(e){o(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):e(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({types:["geocode"]},this.options),s=new google.maps.places.Autocomplete(this.$input,t);s.setFields(["address_component"]),s.addListener("place_changed",(()=>{const t=s.getPlace();if(!t.address_components)return;this.setAddressValues(t.address_components);const e=new CustomEvent("populateAddress",{bubbles:!0,detail:{addressProvider:this,addressComponents:t.address_components}});this.$field.dispatchEvent(e)}))}setAddressValues(t){const e={},o=this.componentMap();for(let s=0;s<t.length;s++){const[i]=t[s].types;o[i]&&(e[i]=t[s][o[i]])}if(e.street_number&&e.route){let t=`${e.street_number} ${e.route}`;e.subpremise&&(t=`${e.subpremise}/${t}`),this.setFieldValue("[data-address1]",t)}this.setFieldValue("[data-city]",e.locality,e.postal_town),this.setFieldValue("[data-zip]",e.postal_code),this.setFieldValue("[data-state]",e.administrative_area_level_1),this.setFieldValue("[data-country]",e.country)}onCurrentLocation(t){const{latitude:e,longitude:o}=t.coords,s=new XMLHttpRequest;s.open("POST",window.location.href,!0),s.setRequestHeader("X-Requested-With","XMLHttpRequest"),s.setRequestHeader("Accept","application/json"),s.setRequestHeader("Cache-Control","no-cache"),s.timeout=1e4,s.ontimeout=()=>{console.log("The request timed out.")},s.onerror=t=>{console.log("The request encountered a network error. Please try again.")},s.onload=()=>{if(this.onEndFetchLocation(),s.status>=200&&s.status<300)try{const t=JSON.parse(s.responseText);t&&t.results&&t.results[0]&&t.results[0].address_components&&this.setAddressValues(t.results[0].address_components),(t.error_message||t.error)&&console.log(t)}catch(t){console.log(t)}else console.log(`${s.status}: ${s.statusText}`)};const i=new FormData;i.append("action","formie/address/google-places-geocode"),i.append("latlng",`${e},${o}`),i.append("key",this.geocodingApiKey),s.send(i)}componentMap(){return{subpremise:"short_name",street_number:"short_name",route:"long_name",postal_town:"long_name",locality:"long_name",administrative_area_level_1:"short_name",country:"short_name",postal_code:"short_name"}}setFieldValue(t,e,o){this.$field.querySelector(t)&&(this.$field.querySelector(t).value=e||o||"")}}}();